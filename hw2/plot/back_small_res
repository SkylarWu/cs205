-> % time python3 main.py --file ../data/CS205_small_Data__42.txt --method backward
Dataset info: 12 features, 500 instances.
  - Without any search algorithm, the baseline is 72.00%

On level 1 of the search tree, ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 0.72) is best
    Using feature(s) {1,2,3,4,5,6,7,8,9,10,11,12} accuracy is 72.00%
On level 2 of the search tree, ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11], 0.774) is best
    Using feature(s) {2,3,4,5,6,7,8,9,10,11,12} accuracy is 75.40%
    Using feature(s) {1,3,4,5,6,7,8,9,10,11,12} accuracy is 73.20%
    Using feature(s) {1,2,4,5,6,7,8,9,10,11,12} accuracy is 72.80%
    Using feature(s) {1,2,3,5,6,7,8,9,10,11,12} accuracy is 74.80%
    Using feature(s) {1,2,3,4,6,7,8,9,10,11,12} accuracy is 73.20%
    Using feature(s) {1,2,3,4,5,7,8,9,10,11,12} accuracy is 71.40%
    Using feature(s) {1,2,3,4,5,6,8,9,10,11,12} accuracy is 72.20%
    Using feature(s) {1,2,3,4,5,6,7,9,10,11,12} accuracy is 74.60%
    Using feature(s) {1,2,3,4,5,6,7,8,10,11,12} accuracy is 74.40%
    Using feature(s) {1,2,3,4,5,6,7,8,9,11,12} accuracy is 72.00%
    Using feature(s) {1,2,3,4,5,6,7,8,9,10,12} accuracy is 77.40%
    Using feature(s) {1,2,3,4,5,6,7,8,9,10,11} accuracy is 75.20%
On level 3 of the search tree, ([0, 2, 3, 4, 5, 6, 7, 8, 9, 11], 0.794) is best
    Using feature(s) {2,3,4,5,6,7,8,9,10,12} accuracy is 78.00%
    Using feature(s) {1,3,4,5,6,7,8,9,10,12} accuracy is 79.40%
    Using feature(s) {1,2,4,5,6,7,8,9,10,12} accuracy is 76.00%
    Using feature(s) {1,2,3,5,6,7,8,9,10,12} accuracy is 75.80%
    Using feature(s) {1,2,3,4,6,7,8,9,10,12} accuracy is 77.60%
    Using feature(s) {1,2,3,4,5,7,8,9,10,12} accuracy is 73.80%
    Using feature(s) {1,2,3,4,5,6,8,9,10,12} accuracy is 74.60%
    Using feature(s) {1,2,3,4,5,6,7,9,10,12} accuracy is 75.40%
    Using feature(s) {1,2,3,4,5,6,7,8,10,12} accuracy is 77.60%
    Using feature(s) {1,2,3,4,5,6,7,8,9,12} accuracy is 75.00%
    Using feature(s) {1,2,3,4,5,6,7,8,9,10} accuracy is 77.80%
On level 4 of the search tree, ([2, 3, 4, 5, 6, 7, 8, 9, 11], 0.794) is best
    Using feature(s) {3,4,5,6,7,8,9,10,12} accuracy is 79.40%
    Using feature(s) {1,4,5,6,7,8,9,10,12} accuracy is 74.60%
    Using feature(s) {1,3,5,6,7,8,9,10,12} accuracy is 77.60%
    Using feature(s) {1,3,4,6,7,8,9,10,12} accuracy is 78.80%
    Using feature(s) {1,3,4,5,7,8,9,10,12} accuracy is 74.00%
    Using feature(s) {1,3,4,5,6,8,9,10,12} accuracy is 76.80%
    Using feature(s) {1,3,4,5,6,7,9,10,12} accuracy is 76.80%
    Using feature(s) {1,3,4,5,6,7,8,10,12} accuracy is 79.20%
    Using feature(s) {1,3,4,5,6,7,8,9,12} accuracy is 75.80%
    Using feature(s) {1,3,4,5,6,7,8,9,10} accuracy is 78.00%

Best feature(s): {1,3,4,5,6,7,8,9,10,12} with accuracy 79.40%

python3 main.py --file ../data/CS205_small_Data__42.txt --method backward  19.23s user 0.14s system 98% cpu 19.669 total
